Сологуб Алина Денисовна
БПИ213
Вариант 13
Задача о гостинице – 2 (умные клиенты). В гостинице 10
номеров с ценой 2000 рублей, 10 номеров с ценой 4000 рублей и
5 номеров с ценой 6000 руб. Клиент, зашедший в гостиницу, обладает некоторой (случайной) суммой и получает номер по своим
финансовым возможностям, если тот свободен. При наличии денег и разных по стоимости номеров он выбирает случайный номер.
Если доступных по цене свободных номеров нет, клиент уходит искать ночлег в другое место. Клиенты порождаются динамически и
уничтожаются при освобождении номера или уходе из гостиницы
при невозможности оплаты. Создать приложение, моделирующее работу гостиницы. Каждого клиента реализовать в виде
отдельного процесса

Описание:
Код реализует систему бронирования номеров с использованием общей памяти и семафоров.

Система имеет 25 номеров, каждый из которых может быть одного из трех типов, с разными ценами (тип 1 - 2000 руб, тип 2 - 4000 руб, тип 3 - 6000 руб). Система может обслуживать максимум 50 клиентов.
Общая структура данных содержит информацию о количестве номеров каждого типа, количестве свободных номеров и массив структур room_t, содержащих информацию о каждом номере, такую как его номер, тип и наличие.

В коде используются семафоры для обеспечения взаимного исключения и предотвращения условий гонки, когда несколько клиентов пытаются забронировать номер одновременно. Существует четыре семафора: по одному для каждого типа номера и один для защиты общей структуры данных.

Когда клиент пытается забронировать номер, он сначала ждет случайное количество времени (до 5 секунд), прежде чем попытаться забронировать номер. Это сделано для имитации реального сценария, когда клиенты не могут пытаться забронировать номер одновременно.

Если комната запрашиваемого типа доступна, клиент резервирует ее и печатает сообщение с указанием номера, типа и цены комнаты. Если ни один номер запрашиваемого типа не доступен, клиент пытается забронировать номер другого типа, начиная со следующего по возрастанию типа. Если свободных номеров нет вообще, клиент выходит из программы, не забронировав номер.

После заселения человек выселяется

Сценарий решаемой задачи:

Создание общей памяти и инициализация переменных.
1.1. Создание структуры shared_data_t, содержащей информацию о количестве свободных номеров каждого типа, а также о количестве номеров каждого типа в общем.
1.2. Инициализация свободных номеров и номеров каждого типа.
1.3. Создание семафоров для синхронизации доступа к общей памяти.

Создание процессов для каждого клиента.
2.1. Генерация случайного количества денег для каждого клиента.
2.2. Ожидание случайного времени перед попыткой забронировать номер.
2.3. Попытка забронировать номер:
2.3.1. Выбор случайного типа номера в зависимости от наличия средств.
2.3.2. Попытка забронировать номер выбранного типа:
2.3.2.1. Блокировка семафора для соответствующего типа номера.
2.3.2.2. Поиск свободного номера выбранного типа.
2.3.2.3. Если свободный номер найден, его резервирование и уменьшение счетчика свободных номеров выбранного типа.
2.3.2.4. Разблокировка семафора для соответствующего типа номера.
2.3.3. Если номер не забронирован, клиент ищет ночлег в другом месте.

Освобождение зарезервированных номеров при уходе клиента.
3.1. Блокировка семафора для соответствующего типа номера.
3.2. Освобождение зарезервированного номера и увеличение счетчика свободных номеров выбранного типа.
3.3. Разблокировка семафора для соответствующего типа номера.

Обработка сигнала SIGINT.
4.1. Освобождение общей памяти и семафоров.
4.2. Завершение работы программы.


